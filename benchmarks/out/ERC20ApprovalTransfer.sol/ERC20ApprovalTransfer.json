{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "Benchmark",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801562000010575f80fd5b506040518060400160405280601581526020017f4552433230417070726f76616c5472616e7366657200000000000000000000008152506040518060400160405280600581526020017f453230415400000000000000000000000000000000000000000000000000000081525081600390816200008e91906200030d565b508060049081620000a091906200030d565b505050620003f1565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200012557607f821691505b6020821081036200013b576200013a620000e0565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200019f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000162565b620001ab868362000162565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620001f5620001ef620001e984620001c3565b620001cc565b620001c3565b9050919050565b5f819050919050565b6200021083620001d5565b620002286200021f82620001fc565b8484546200016e565b825550505050565b5f90565b6200023e62000230565b6200024b81848462000205565b505050565b5b818110156200027257620002665f8262000234565b60018101905062000251565b5050565b601f821115620002c1576200028b8162000141565b620002968462000153565b81016020851015620002a6578190505b620002be620002b58562000153565b83018262000250565b50505b505050565b5f82821c905092915050565b5f620002e35f1984600802620002c6565b1980831691505092915050565b5f620002fd8383620002d2565b9150826002028217905092915050565b6200031882620000a9565b67ffffffffffffffff811115620003345762000333620000b3565b5b6200034082546200010d565b6200034d82828562000276565b5f60209050601f83116001811462000383575f84156200036e578287015190505b6200037a8582620002f0565b865550620003e9565b601f198416620003938662000141565b5f5b82811015620003bc5784890151825560018201915060208501945060208101905062000395565b86831015620003dc5784890151620003d8601f891682620002d2565b8355505b6001600288020188555050505b505050505050565b61181180620003ff5f395ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c8063395093511161006f578063395093511461017a57806370a08231146101aa57806395d89b41146101da578063a457c2d7146101f8578063a9059cbb14610228578063dd62ed3e14610258576100b2565b806306fdde03146100b6578063095ea7b3146100d457806318160ddd1461010457806323b872dd1461012257806330627b7c14610152578063313ce5671461015c575b5f80fd5b6100be610288565b6040516100cb9190610d8a565b60405180910390f35b6100ee60048036038101906100e99190610e3b565b610318565b6040516100fb9190610e93565b60405180910390f35b61010c61033a565b6040516101199190610ebb565b60405180910390f35b61013c60048036038101906101379190610ed4565b610343565b6040516101499190610e93565b60405180910390f35b61015a610371565b005b6101646104bb565b6040516101719190610f3f565b60405180910390f35b610194600480360381019061018f9190610e3b565b6104c3565b6040516101a19190610e93565b60405180910390f35b6101c460048036038101906101bf9190610f58565b6104f9565b6040516101d19190610ebb565b60405180910390f35b6101e261053e565b6040516101ef9190610d8a565b60405180910390f35b610212600480360381019061020d9190610e3b565b6105ce565b60405161021f9190610e93565b60405180910390f35b610242600480360381019061023d9190610e3b565b610643565b60405161024f9190610e93565b60405180910390f35b610272600480360381019061026d9190610f83565b610665565b60405161027f9190610ebb565b60405180910390f35b60606003805461029790610fee565b80601f01602080910402602001604051908101604052809291908181526020018280546102c390610fee565b801561030e5780601f106102e55761010080835404028352916020019161030e565b820191905f5260205f20905b8154815290600101906020018083116102f157829003601f168201915b5050505050905090565b5f806103226106e7565b905061032f8185856106ee565b600191505092915050565b5f600254905090565b5f8061034d6106e7565b905061035a8582856108b1565b61036585858561093c565b60019150509392505050565b61039d3361037d6104bb565b600a610389919061117a565b633b9aca0061039891906111c4565b610ba8565b5f600190505b6103e88110156104b8575f6103b83333610665565b146103f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ef9061124f565b60405180910390fd5b6104023382610318565b508061040e3333610665565b1461044e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610445906112b7565b60405180910390fd5b610459333383610343565b505f6104653333610665565b146104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049c9061131f565b60405180910390fd5b80806104b09061133d565b9150506103a3565b50565b5f6012905090565b5f806104cd6106e7565b90506104ee8185856104df8589610665565b6104e99190611384565b6106ee565b600191505092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461054d90610fee565b80601f016020809104026020016040519081016040528092919081815260200182805461057990610fee565b80156105c45780601f1061059b576101008083540402835291602001916105c4565b820191905f5260205f20905b8154815290600101906020018083116105a757829003601f168201915b5050505050905090565b5f806105d86106e7565b90505f6105e58286610665565b90508381101561062a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062190611427565b60405180910390fd5b61063782868684036106ee565b60019250505092915050565b5f8061064d6106e7565b905061065a81858561093c565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361075c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610753906114b5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c190611543565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108a49190610ebb565b60405180910390a3505050565b5f6108bc8484610665565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109365781811015610928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091f906115ab565b60405180910390fd5b61093584848484036106ee565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a190611639565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0f906116c7565b60405180910390fd5b610a23838383610cf6565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610aa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9d90611755565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b8f9190610ebb565b60405180910390a3610ba2848484610cfb565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0d906117bd565b60405180910390fd5b610c215f8383610cf6565b8060025f828254610c329190611384565b92505081905550805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610cdf9190610ebb565b60405180910390a3610cf25f8383610cfb565b5050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610d37578082015181840152602081019050610d1c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610d5c82610d00565b610d668185610d0a565b9350610d76818560208601610d1a565b610d7f81610d42565b840191505092915050565b5f6020820190508181035f830152610da28184610d52565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610dd782610dae565b9050919050565b610de781610dcd565b8114610df1575f80fd5b50565b5f81359050610e0281610dde565b92915050565b5f819050919050565b610e1a81610e08565b8114610e24575f80fd5b50565b5f81359050610e3581610e11565b92915050565b5f8060408385031215610e5157610e50610daa565b5b5f610e5e85828601610df4565b9250506020610e6f85828601610e27565b9150509250929050565b5f8115159050919050565b610e8d81610e79565b82525050565b5f602082019050610ea65f830184610e84565b92915050565b610eb581610e08565b82525050565b5f602082019050610ece5f830184610eac565b92915050565b5f805f60608486031215610eeb57610eea610daa565b5b5f610ef886828701610df4565b9350506020610f0986828701610df4565b9250506040610f1a86828701610e27565b9150509250925092565b5f60ff82169050919050565b610f3981610f24565b82525050565b5f602082019050610f525f830184610f30565b92915050565b5f60208284031215610f6d57610f6c610daa565b5b5f610f7a84828501610df4565b91505092915050565b5f8060408385031215610f9957610f98610daa565b5b5f610fa685828601610df4565b9250506020610fb785828601610df4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061100557607f821691505b60208210810361101857611017610fc1565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156110a05780860481111561107c5761107b61101e565b5b600185161561108b5780820291505b80810290506110998561104b565b9450611060565b94509492505050565b5f826110b85760019050611173565b816110c5575f9050611173565b81600181146110db57600281146110e557611114565b6001915050611173565b60ff8411156110f7576110f661101e565b5b8360020a91508482111561110e5761110d61101e565b5b50611173565b5060208310610133831016604e8410600b84101617156111495782820a9050838111156111445761114361101e565b5b611173565b6111568484846001611057565b9250905081840481111561116d5761116c61101e565b5b81810290505b9392505050565b5f61118482610e08565b915061118f83610f24565b92506111bc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846110a9565b905092915050565b5f6111ce82610e08565b91506111d983610e08565b92508282026111e781610e08565b915082820484148315176111fe576111fd61101e565b5b5092915050565b7f6e6f6e2d7a65726f20616c6c6f77616e636520746f20737461727400000000005f82015250565b5f611239601b83610d0a565b915061124482611205565b602082019050919050565b5f6020820190508181035f8301526112668161122d565b9050919050565b7f6469646e2774206769766520616c6c6f77616e636500000000000000000000005f82015250565b5f6112a1601583610d0a565b91506112ac8261126d565b602082019050919050565b5f6020820190508181035f8301526112ce81611295565b9050919050565b7f6e6f6e2d7a65726f20616c6c6f77616e636520746f20656e64000000000000005f82015250565b5f611309601983610d0a565b9150611314826112d5565b602082019050919050565b5f6020820190508181035f830152611336816112fd565b9050919050565b5f61134782610e08565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113795761137861101e565b5b600182019050919050565b5f61138e82610e08565b915061139983610e08565b92508282019050808211156113b1576113b061101e565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f611411602583610d0a565b915061141c826113b7565b604082019050919050565b5f6020820190508181035f83015261143e81611405565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f61149f602483610d0a565b91506114aa82611445565b604082019050919050565b5f6020820190508181035f8301526114cc81611493565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f61152d602283610d0a565b9150611538826114d3565b604082019050919050565b5f6020820190508181035f83015261155a81611521565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f611595601d83610d0a565b91506115a082611561565b602082019050919050565b5f6020820190508181035f8301526115c281611589565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f611623602583610d0a565b915061162e826115c9565b604082019050919050565b5f6020820190508181035f83015261165081611617565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6116b1602383610d0a565b91506116bc82611657565b604082019050919050565b5f6020820190508181035f8301526116de816116a5565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f61173f602683610d0a565b915061174a826116e5565b604082019050919050565b5f6020820190508181035f83015261176c81611733565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f2061646472657373005f82015250565b5f6117a7601f83610d0a565b91506117b282611773565b602082019050919050565b5f6020820190508181035f8301526117d48161179b565b905091905056fea2646970667358221220c782c8cfcb1543263467ae23a6705b2a2ea1fcc3e2afbd5d72d33809b5d6e1c964736f6c63430008150033",
    "sourceMap": "86:753:4:-:0;;;132:56;;;;;;;;;;1955:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2029:5;2021;:13;;;;;;:::i;:::-;;2054:7;2044;:17;;;;;;:::i;:::-;;1955:113;;86:753:4;;7:99:8;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;86:753:4:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f80fd5b50600436106100b2575f3560e01c8063395093511161006f578063395093511461017a57806370a08231146101aa57806395d89b41146101da578063a457c2d7146101f8578063a9059cbb14610228578063dd62ed3e14610258576100b2565b806306fdde03146100b6578063095ea7b3146100d457806318160ddd1461010457806323b872dd1461012257806330627b7c14610152578063313ce5671461015c575b5f80fd5b6100be610288565b6040516100cb9190610d8a565b60405180910390f35b6100ee60048036038101906100e99190610e3b565b610318565b6040516100fb9190610e93565b60405180910390f35b61010c61033a565b6040516101199190610ebb565b60405180910390f35b61013c60048036038101906101379190610ed4565b610343565b6040516101499190610e93565b60405180910390f35b61015a610371565b005b6101646104bb565b6040516101719190610f3f565b60405180910390f35b610194600480360381019061018f9190610e3b565b6104c3565b6040516101a19190610e93565b60405180910390f35b6101c460048036038101906101bf9190610f58565b6104f9565b6040516101d19190610ebb565b60405180910390f35b6101e261053e565b6040516101ef9190610d8a565b60405180910390f35b610212600480360381019061020d9190610e3b565b6105ce565b60405161021f9190610e93565b60405180910390f35b610242600480360381019061023d9190610e3b565b610643565b60405161024f9190610e93565b60405180910390f35b610272600480360381019061026d9190610f83565b610665565b60405161027f9190610ebb565b60405180910390f35b60606003805461029790610fee565b80601f01602080910402602001604051908101604052809291908181526020018280546102c390610fee565b801561030e5780601f106102e55761010080835404028352916020019161030e565b820191905f5260205f20905b8154815290600101906020018083116102f157829003601f168201915b5050505050905090565b5f806103226106e7565b905061032f8185856106ee565b600191505092915050565b5f600254905090565b5f8061034d6106e7565b905061035a8582856108b1565b61036585858561093c565b60019150509392505050565b61039d3361037d6104bb565b600a610389919061117a565b633b9aca0061039891906111c4565b610ba8565b5f600190505b6103e88110156104b8575f6103b83333610665565b146103f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ef9061124f565b60405180910390fd5b6104023382610318565b508061040e3333610665565b1461044e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610445906112b7565b60405180910390fd5b610459333383610343565b505f6104653333610665565b146104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049c9061131f565b60405180910390fd5b80806104b09061133d565b9150506103a3565b50565b5f6012905090565b5f806104cd6106e7565b90506104ee8185856104df8589610665565b6104e99190611384565b6106ee565b600191505092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461054d90610fee565b80601f016020809104026020016040519081016040528092919081815260200182805461057990610fee565b80156105c45780601f1061059b576101008083540402835291602001916105c4565b820191905f5260205f20905b8154815290600101906020018083116105a757829003601f168201915b5050505050905090565b5f806105d86106e7565b90505f6105e58286610665565b90508381101561062a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062190611427565b60405180910390fd5b61063782868684036106ee565b60019250505092915050565b5f8061064d6106e7565b905061065a81858561093c565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361075c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610753906114b5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c190611543565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108a49190610ebb565b60405180910390a3505050565b5f6108bc8484610665565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109365781811015610928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091f906115ab565b60405180910390fd5b61093584848484036106ee565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a190611639565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0f906116c7565b60405180910390fd5b610a23838383610cf6565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610aa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9d90611755565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b8f9190610ebb565b60405180910390a3610ba2848484610cfb565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0d906117bd565b60405180910390fd5b610c215f8383610cf6565b8060025f828254610c329190611384565b92505081905550805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610cdf9190610ebb565b60405180910390a3610cf25f8383610cfb565b5050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610d37578082015181840152602081019050610d1c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610d5c82610d00565b610d668185610d0a565b9350610d76818560208601610d1a565b610d7f81610d42565b840191505092915050565b5f6020820190508181035f830152610da28184610d52565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610dd782610dae565b9050919050565b610de781610dcd565b8114610df1575f80fd5b50565b5f81359050610e0281610dde565b92915050565b5f819050919050565b610e1a81610e08565b8114610e24575f80fd5b50565b5f81359050610e3581610e11565b92915050565b5f8060408385031215610e5157610e50610daa565b5b5f610e5e85828601610df4565b9250506020610e6f85828601610e27565b9150509250929050565b5f8115159050919050565b610e8d81610e79565b82525050565b5f602082019050610ea65f830184610e84565b92915050565b610eb581610e08565b82525050565b5f602082019050610ece5f830184610eac565b92915050565b5f805f60608486031215610eeb57610eea610daa565b5b5f610ef886828701610df4565b9350506020610f0986828701610df4565b9250506040610f1a86828701610e27565b9150509250925092565b5f60ff82169050919050565b610f3981610f24565b82525050565b5f602082019050610f525f830184610f30565b92915050565b5f60208284031215610f6d57610f6c610daa565b5b5f610f7a84828501610df4565b91505092915050565b5f8060408385031215610f9957610f98610daa565b5b5f610fa685828601610df4565b9250506020610fb785828601610df4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061100557607f821691505b60208210810361101857611017610fc1565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156110a05780860481111561107c5761107b61101e565b5b600185161561108b5780820291505b80810290506110998561104b565b9450611060565b94509492505050565b5f826110b85760019050611173565b816110c5575f9050611173565b81600181146110db57600281146110e557611114565b6001915050611173565b60ff8411156110f7576110f661101e565b5b8360020a91508482111561110e5761110d61101e565b5b50611173565b5060208310610133831016604e8410600b84101617156111495782820a9050838111156111445761114361101e565b5b611173565b6111568484846001611057565b9250905081840481111561116d5761116c61101e565b5b81810290505b9392505050565b5f61118482610e08565b915061118f83610f24565b92506111bc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846110a9565b905092915050565b5f6111ce82610e08565b91506111d983610e08565b92508282026111e781610e08565b915082820484148315176111fe576111fd61101e565b5b5092915050565b7f6e6f6e2d7a65726f20616c6c6f77616e636520746f20737461727400000000005f82015250565b5f611239601b83610d0a565b915061124482611205565b602082019050919050565b5f6020820190508181035f8301526112668161122d565b9050919050565b7f6469646e2774206769766520616c6c6f77616e636500000000000000000000005f82015250565b5f6112a1601583610d0a565b91506112ac8261126d565b602082019050919050565b5f6020820190508181035f8301526112ce81611295565b9050919050565b7f6e6f6e2d7a65726f20616c6c6f77616e636520746f20656e64000000000000005f82015250565b5f611309601983610d0a565b9150611314826112d5565b602082019050919050565b5f6020820190508181035f830152611336816112fd565b9050919050565b5f61134782610e08565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113795761137861101e565b5b600182019050919050565b5f61138e82610e08565b915061139983610e08565b92508282019050808211156113b1576113b061101e565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f611411602583610d0a565b915061141c826113b7565b604082019050919050565b5f6020820190508181035f83015261143e81611405565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f61149f602483610d0a565b91506114aa82611445565b604082019050919050565b5f6020820190508181035f8301526114cc81611493565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f61152d602283610d0a565b9150611538826114d3565b604082019050919050565b5f6020820190508181035f83015261155a81611521565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f611595601d83610d0a565b91506115a082611561565b602082019050919050565b5f6020820190508181035f8301526115c281611589565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f611623602583610d0a565b915061162e826115c9565b604082019050919050565b5f6020820190508181035f83015261165081611617565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6116b1602383610d0a565b91506116bc82611657565b604082019050919050565b5f6020820190508181035f8301526116de816116a5565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f61173f602683610d0a565b915061174a826116e5565b604082019050919050565b5f6020820190508181035f83015261176c81611733565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f2061646472657373005f82015250565b5f6117a7601f83610d0a565b91506117b282611773565b602082019050919050565b5f6020820190508181035f8301526117d48161179b565b905091905056fea2646970667358221220c782c8cfcb1543263467ae23a6705b2a2ea1fcc3e2afbd5d72d33809b5d6e1c964736f6c63430008150033",
    "sourceMap": "86:753:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2133:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4534:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3221:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5329:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;194:643:4;;;:::i;:::-;;3070:91:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6010:262;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3385:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2344:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6759:489;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3750:225;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4033:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2133:98;2187:13;2219:5;2212:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2133:98;:::o;4534:233::-;4649:4;4669:13;4685:12;:10;:12::i;:::-;4669:28;;4707:32;4716:5;4723:7;4732:6;4707:8;:32::i;:::-;4756:4;4749:11;;;4534:233;;;;:::o;3221:106::-;3282:7;3308:12;;3301:19;;3221:106;:::o;5329:286::-;5456:4;5472:15;5490:12;:10;:12::i;:::-;5472:30;;5512:38;5528:4;5534:7;5543:6;5512:15;:38::i;:::-;5560:27;5570:4;5576:2;5580:6;5560:9;:27::i;:::-;5604:4;5597:11;;;5329:286;;;;;:::o;194:643:4:-;234:46;240:10;269;:8;:10::i;:::-;265:2;:14;;;;:::i;:::-;252:10;:27;;;;:::i;:::-;234:5;:46::i;:::-;295:9;307:1;295:13;;290:541;314:4;310:1;:8;290:541;;;401:1;364:33;374:10;386;364:9;:33::i;:::-;:38;339:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;477:22;485:10;497:1;477:7;:22::i;:::-;;575:1;538:33;548:10;560;538:9;:33::i;:::-;:38;513:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;645:39;658:10;670;682:1;645:12;:39::i;:::-;;760:1;723:33;733:10;745;723:9;:33::i;:::-;:38;698:122;;;;;;;;;;;;:::i;:::-;;;;;;;;;320:3;;;;;:::i;:::-;;;;290:541;;;;194:643::o;3070:91:1:-;3128:5;3152:2;3145:9;;3070:91;:::o;6010:262::-;6122:4;6142:13;6158:12;:10;:12::i;:::-;6142:28;;6180:64;6189:5;6196:7;6233:10;6205:25;6215:5;6222:7;6205:9;:25::i;:::-;:38;;;;:::i;:::-;6180:8;:64::i;:::-;6261:4;6254:11;;;6010:262;;;;:::o;3385:169::-;3499:7;3529:9;:18;3539:7;3529:18;;;;;;;;;;;;;;;;3522:25;;3385:169;;;:::o;2344:102::-;2400:13;2432:7;2425:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2344:102;:::o;6759:489::-;6876:4;6896:13;6912:12;:10;:12::i;:::-;6896:28;;6934:24;6961:25;6971:5;6978:7;6961:9;:25::i;:::-;6934:52;;7037:15;7017:16;:35;;6996:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;7149:60;7158:5;7165:7;7193:15;7174:16;:34;7149:8;:60::i;:::-;7237:4;7230:11;;;;6759:489;;;;:::o;3750:225::-;3861:4;3881:13;3897:12;:10;:12::i;:::-;3881:28;;3919;3929:5;3936:2;3940:6;3919:9;:28::i;:::-;3964:4;3957:11;;;3750:225;;;;:::o;4033:193::-;4162:7;4192:11;:18;4204:5;4192:18;;;;;;;;;;;;;;;:27;4211:7;4192:27;;;;;;;;;;;;;;;;4185:34;;4033:193;;;;:::o;640:96:0:-;693:7;719:10;712:17;;640:96;:::o;10767:370:1:-;10915:1;10898:19;;:5;:19;;;10890:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10995:1;10976:21;;:7;:21;;;10968:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11077:6;11047:11;:18;11059:5;11047:18;;;;;;;;;;;;;;;:27;11066:7;11047:27;;;;;;;;;;;;;;;:36;;;;11114:7;11098:32;;11107:5;11098:32;;;11123:6;11098:32;;;;;;:::i;:::-;;;;;;;;10767:370;;;:::o;11418:487::-;11548:24;11575:25;11585:5;11592:7;11575:9;:25::i;:::-;11548:52;;11634:17;11614:16;:37;11610:289;;11712:6;11692:16;:26;;11667:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;11823:51;11832:5;11839:7;11867:6;11848:16;:25;11823:8;:51::i;:::-;11610:289;11538:367;11418:487;;;:::o;7702:852::-;7844:1;7828:18;;:4;:18;;;7820:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7920:1;7906:16;;:2;:16;;;7898:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7973:38;7994:4;8000:2;8004:6;7973:20;:38::i;:::-;8022:19;8044:9;:15;8054:4;8044:15;;;;;;;;;;;;;;;;8022:37;;8105:6;8090:11;:21;;8069:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;8241:6;8227:11;:20;8209:9;:15;8219:4;8209:15;;;;;;;;;;;;;;;:38;;;;8441:6;8424:9;:13;8434:2;8424:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8488:2;8473:26;;8482:4;8473:26;;;8492:6;8473:26;;;;;;:::i;:::-;;;;;;;;8510:37;8530:4;8536:2;8540:6;8510:19;:37::i;:::-;7810:744;7702:852;;;:::o;8830:535::-;8932:1;8913:21;;:7;:21;;;8905:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8981:49;9010:1;9014:7;9023:6;8981:20;:49::i;:::-;9057:6;9041:12;;:22;;;;;;;:::i;:::-;;;;;;;;9231:6;9209:9;:18;9219:7;9209:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;9283:7;9262:37;;9279:1;9262:37;;;9292:6;9262:37;;;;;;:::i;:::-;;;;;;;;9310:48;9338:1;9342:7;9351:6;9310:19;:48::i;:::-;8830:535;;:::o;12489:121::-;;;;:::o;13198:120::-;;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:102;6408:8;6455:5;6452:1;6448:13;6427:34;;6366:102;;;:::o;6474:848::-;6535:5;6542:4;6566:6;6557:15;;6590:5;6581:14;;6604:712;6625:1;6615:8;6612:15;6604:712;;;6720:4;6715:3;6711:14;6705:4;6702:24;6699:50;;;6729:18;;:::i;:::-;6699:50;6779:1;6769:8;6765:16;6762:451;;;7194:4;7187:5;7183:16;7174:25;;6762:451;7244:4;7238;7234:15;7226:23;;7274:32;7297:8;7274:32;:::i;:::-;7262:44;;6604:712;;;6474:848;;;;;;;:::o;7328:1073::-;7382:5;7573:8;7563:40;;7594:1;7585:10;;7596:5;;7563:40;7622:4;7612:36;;7639:1;7630:10;;7641:5;;7612:36;7708:4;7756:1;7751:27;;;;7792:1;7787:191;;;;7701:277;;7751:27;7769:1;7760:10;;7771:5;;;7787:191;7832:3;7822:8;7819:17;7816:43;;;7839:18;;:::i;:::-;7816:43;7888:8;7885:1;7881:16;7872:25;;7923:3;7916:5;7913:14;7910:40;;;7930:18;;:::i;:::-;7910:40;7963:5;;;7701:277;;8087:2;8077:8;8074:16;8068:3;8062:4;8059:13;8055:36;8037:2;8027:8;8024:16;8019:2;8013:4;8010:12;8006:35;7990:111;7987:246;;;8143:8;8137:4;8133:19;8124:28;;8178:3;8171:5;8168:14;8165:40;;;8185:18;;:::i;:::-;8165:40;8218:5;;7987:246;8258:42;8296:3;8286:8;8280:4;8277:1;8258:42;:::i;:::-;8243:57;;;;8332:4;8327:3;8323:14;8316:5;8313:25;8310:51;;;8341:18;;:::i;:::-;8310:51;8390:4;8383:5;8379:16;8370:25;;7328:1073;;;;;;:::o;8407:281::-;8465:5;8489:23;8507:4;8489:23;:::i;:::-;8481:31;;8533:25;8549:8;8533:25;:::i;:::-;8521:37;;8577:104;8614:66;8604:8;8598:4;8577:104;:::i;:::-;8568:113;;8407:281;;;;:::o;8694:410::-;8734:7;8757:20;8775:1;8757:20;:::i;:::-;8752:25;;8791:20;8809:1;8791:20;:::i;:::-;8786:25;;8846:1;8843;8839:9;8868:30;8886:11;8868:30;:::i;:::-;8857:41;;9047:1;9038:7;9034:15;9031:1;9028:22;9008:1;9001:9;8981:83;8958:139;;9077:18;;:::i;:::-;8958:139;8742:362;8694:410;;;;:::o;9110:177::-;9250:29;9246:1;9238:6;9234:14;9227:53;9110:177;:::o;9293:366::-;9435:3;9456:67;9520:2;9515:3;9456:67;:::i;:::-;9449:74;;9532:93;9621:3;9532:93;:::i;:::-;9650:2;9645:3;9641:12;9634:19;;9293:366;;;:::o;9665:419::-;9831:4;9869:2;9858:9;9854:18;9846:26;;9918:9;9912:4;9908:20;9904:1;9893:9;9889:17;9882:47;9946:131;10072:4;9946:131;:::i;:::-;9938:139;;9665:419;;;:::o;10090:171::-;10230:23;10226:1;10218:6;10214:14;10207:47;10090:171;:::o;10267:366::-;10409:3;10430:67;10494:2;10489:3;10430:67;:::i;:::-;10423:74;;10506:93;10595:3;10506:93;:::i;:::-;10624:2;10619:3;10615:12;10608:19;;10267:366;;;:::o;10639:419::-;10805:4;10843:2;10832:9;10828:18;10820:26;;10892:9;10886:4;10882:20;10878:1;10867:9;10863:17;10856:47;10920:131;11046:4;10920:131;:::i;:::-;10912:139;;10639:419;;;:::o;11064:175::-;11204:27;11200:1;11192:6;11188:14;11181:51;11064:175;:::o;11245:366::-;11387:3;11408:67;11472:2;11467:3;11408:67;:::i;:::-;11401:74;;11484:93;11573:3;11484:93;:::i;:::-;11602:2;11597:3;11593:12;11586:19;;11245:366;;;:::o;11617:419::-;11783:4;11821:2;11810:9;11806:18;11798:26;;11870:9;11864:4;11860:20;11856:1;11845:9;11841:17;11834:47;11898:131;12024:4;11898:131;:::i;:::-;11890:139;;11617:419;;;:::o;12042:233::-;12081:3;12104:24;12122:5;12104:24;:::i;:::-;12095:33;;12150:66;12143:5;12140:77;12137:103;;12220:18;;:::i;:::-;12137:103;12267:1;12260:5;12256:13;12249:20;;12042:233;;;:::o;12281:191::-;12321:3;12340:20;12358:1;12340:20;:::i;:::-;12335:25;;12374:20;12392:1;12374:20;:::i;:::-;12369:25;;12417:1;12414;12410:9;12403:16;;12438:3;12435:1;12432:10;12429:36;;;12445:18;;:::i;:::-;12429:36;12281:191;;;;:::o;12478:224::-;12618:34;12614:1;12606:6;12602:14;12595:58;12687:7;12682:2;12674:6;12670:15;12663:32;12478:224;:::o;12708:366::-;12850:3;12871:67;12935:2;12930:3;12871:67;:::i;:::-;12864:74;;12947:93;13036:3;12947:93;:::i;:::-;13065:2;13060:3;13056:12;13049:19;;12708:366;;;:::o;13080:419::-;13246:4;13284:2;13273:9;13269:18;13261:26;;13333:9;13327:4;13323:20;13319:1;13308:9;13304:17;13297:47;13361:131;13487:4;13361:131;:::i;:::-;13353:139;;13080:419;;;:::o;13505:223::-;13645:34;13641:1;13633:6;13629:14;13622:58;13714:6;13709:2;13701:6;13697:15;13690:31;13505:223;:::o;13734:366::-;13876:3;13897:67;13961:2;13956:3;13897:67;:::i;:::-;13890:74;;13973:93;14062:3;13973:93;:::i;:::-;14091:2;14086:3;14082:12;14075:19;;13734:366;;;:::o;14106:419::-;14272:4;14310:2;14299:9;14295:18;14287:26;;14359:9;14353:4;14349:20;14345:1;14334:9;14330:17;14323:47;14387:131;14513:4;14387:131;:::i;:::-;14379:139;;14106:419;;;:::o;14531:221::-;14671:34;14667:1;14659:6;14655:14;14648:58;14740:4;14735:2;14727:6;14723:15;14716:29;14531:221;:::o;14758:366::-;14900:3;14921:67;14985:2;14980:3;14921:67;:::i;:::-;14914:74;;14997:93;15086:3;14997:93;:::i;:::-;15115:2;15110:3;15106:12;15099:19;;14758:366;;;:::o;15130:419::-;15296:4;15334:2;15323:9;15319:18;15311:26;;15383:9;15377:4;15373:20;15369:1;15358:9;15354:17;15347:47;15411:131;15537:4;15411:131;:::i;:::-;15403:139;;15130:419;;;:::o;15555:179::-;15695:31;15691:1;15683:6;15679:14;15672:55;15555:179;:::o;15740:366::-;15882:3;15903:67;15967:2;15962:3;15903:67;:::i;:::-;15896:74;;15979:93;16068:3;15979:93;:::i;:::-;16097:2;16092:3;16088:12;16081:19;;15740:366;;;:::o;16112:419::-;16278:4;16316:2;16305:9;16301:18;16293:26;;16365:9;16359:4;16355:20;16351:1;16340:9;16336:17;16329:47;16393:131;16519:4;16393:131;:::i;:::-;16385:139;;16112:419;;;:::o;16537:224::-;16677:34;16673:1;16665:6;16661:14;16654:58;16746:7;16741:2;16733:6;16729:15;16722:32;16537:224;:::o;16767:366::-;16909:3;16930:67;16994:2;16989:3;16930:67;:::i;:::-;16923:74;;17006:93;17095:3;17006:93;:::i;:::-;17124:2;17119:3;17115:12;17108:19;;16767:366;;;:::o;17139:419::-;17305:4;17343:2;17332:9;17328:18;17320:26;;17392:9;17386:4;17382:20;17378:1;17367:9;17363:17;17356:47;17420:131;17546:4;17420:131;:::i;:::-;17412:139;;17139:419;;;:::o;17564:222::-;17704:34;17700:1;17692:6;17688:14;17681:58;17773:5;17768:2;17760:6;17756:15;17749:30;17564:222;:::o;17792:366::-;17934:3;17955:67;18019:2;18014:3;17955:67;:::i;:::-;17948:74;;18031:93;18120:3;18031:93;:::i;:::-;18149:2;18144:3;18140:12;18133:19;;17792:366;;;:::o;18164:419::-;18330:4;18368:2;18357:9;18353:18;18345:26;;18417:9;18411:4;18407:20;18403:1;18392:9;18388:17;18381:47;18445:131;18571:4;18445:131;:::i;:::-;18437:139;;18164:419;;;:::o;18589:225::-;18729:34;18725:1;18717:6;18713:14;18706:58;18798:8;18793:2;18785:6;18781:15;18774:33;18589:225;:::o;18820:366::-;18962:3;18983:67;19047:2;19042:3;18983:67;:::i;:::-;18976:74;;19059:93;19148:3;19059:93;:::i;:::-;19177:2;19172:3;19168:12;19161:19;;18820:366;;;:::o;19192:419::-;19358:4;19396:2;19385:9;19381:18;19373:26;;19445:9;19439:4;19435:20;19431:1;19420:9;19416:17;19409:47;19473:131;19599:4;19473:131;:::i;:::-;19465:139;;19192:419;;;:::o;19617:181::-;19757:33;19753:1;19745:6;19741:14;19734:57;19617:181;:::o;19804:366::-;19946:3;19967:67;20031:2;20026:3;19967:67;:::i;:::-;19960:74;;20043:93;20132:3;20043:93;:::i;:::-;20161:2;20156:3;20152:12;20145:19;;19804:366;;;:::o;20176:419::-;20342:4;20380:2;20369:9;20365:18;20357:26;;20429:9;20423:4;20419:20;20415:1;20404:9;20400:17;20393:47;20457:131;20583:4;20457:131;:::i;:::-;20449:139;;20176:419;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "Benchmark()": "30627b7c",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "ast": {
    "absolutePath": "src/erc20/approval-transfer/ERC20ApprovalTransfer.sol",
    "id": 803,
    "exportedSymbols": {
      "Context": [
        21
      ],
      "ERC20": [
        608
      ],
      "ERC20ApprovalTransfer": [
        802
      ],
      "IERC20": [
        686
      ],
      "IERC20Metadata": [
        711
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:804:4",
    "nodes": [
      {
        "id": 713,
        "nodeType": "PragmaDirective",
        "src": "36:24:4",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 714,
        "nodeType": "ImportDirective",
        "src": "62:22:4",
        "nodes": [],
        "absolutePath": "src/erc20/ERC20.sol",
        "file": "../ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 803,
        "sourceUnit": 609,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 802,
        "nodeType": "ContractDefinition",
        "src": "86:753:4",
        "nodes": [
          {
            "id": 724,
            "nodeType": "FunctionDefinition",
            "src": "132:56:4",
            "nodes": [],
            "body": {
              "id": 723,
              "nodeType": "Block",
              "src": "186:2:4",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4552433230417070726f76616c5472616e73666572",
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "152:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_46c5f93474829095f403c5063f3a5ec8d5899e5a5421401f7ed803d762cab357",
                      "typeString": "literal_string \"ERC20ApprovalTransfer\""
                    },
                    "value": "ERC20ApprovalTransfer"
                  },
                  {
                    "hexValue": "4532304154",
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "177:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_092ab34ac62e79e9f341b4e1dbf06c545ccf710df76ab2c888a228727e4e31ac",
                      "typeString": "literal_string \"E20AT\""
                    },
                    "value": "E20AT"
                  }
                ],
                "id": 721,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 718,
                  "name": "ERC20",
                  "nameLocations": [
                    "146:5:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 608,
                  "src": "146:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "146:39:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "143:2:4"
            },
            "returnParameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "186:0:4"
            },
            "scope": 802,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 801,
            "nodeType": "FunctionDefinition",
            "src": "194:643:4",
            "nodes": [],
            "body": {
              "id": 800,
              "nodeType": "Block",
              "src": "224:613:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 728,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "240:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "244:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "240:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030303030303030",
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "252:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000_by_1",
                            "typeString": "int_const 1000000000"
                          },
                          "value": "1000000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "265:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 732,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "269:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                "typeString": "function () view returns (uint8)"
                              }
                            },
                            "id": 733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "269:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "265:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "252:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 727,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 425,
                      "src": "234:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "234:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 737,
                  "nodeType": "ExpressionStatement",
                  "src": "234:46:4"
                },
                {
                  "body": {
                    "id": 798,
                    "nodeType": "Block",
                    "src": "325:506:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 750,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "374:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 751,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "378:6:4",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "374:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 752,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "386:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 753,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "390:6:4",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "386:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 749,
                                  "name": "allowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 163,
                                  "src": "364:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view returns (uint256)"
                                  }
                                },
                                "id": 754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "364:33:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "401:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "364:38:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6e6f6e2d7a65726f20616c6c6f77616e636520746f207374617274",
                              "id": 757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "420:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7606c022ac13a94b8bc36e887820dfc7f4315d9ea13e44d2e98a7cf8c6504802",
                                "typeString": "literal_string \"non-zero allowance to start\""
                              },
                              "value": "non-zero allowance to start"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7606c022ac13a94b8bc36e887820dfc7f4315d9ea13e44d2e98a7cf8c6504802",
                                "typeString": "literal_string \"non-zero allowance to start\""
                              }
                            ],
                            "id": 748,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "339:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "339:124:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 759,
                        "nodeType": "ExpressionStatement",
                        "src": "339:124:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 761,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "485:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "489:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "485:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 763,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 739,
                              "src": "497:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 760,
                            "name": "approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 188,
                            "src": "477:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "477:22:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 765,
                        "nodeType": "ExpressionStatement",
                        "src": "477:22:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 768,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "548:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 769,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "552:6:4",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "548:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 770,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "560:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 771,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "564:6:4",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "560:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 767,
                                  "name": "allowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 163,
                                  "src": "538:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view returns (uint256)"
                                  }
                                },
                                "id": 772,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "538:33:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 773,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 739,
                                "src": "575:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "538:38:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6469646e2774206769766520616c6c6f77616e6365",
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "594:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_773f86185a72451990cffc6dda1ff90025e5f697c9a4741b9bb165a7a3f84217",
                                "typeString": "literal_string \"didn't give allowance\""
                              },
                              "value": "didn't give allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_773f86185a72451990cffc6dda1ff90025e5f697c9a4741b9bb165a7a3f84217",
                                "typeString": "literal_string \"didn't give allowance\""
                              }
                            ],
                            "id": 766,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "513:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "513:118:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 777,
                        "nodeType": "ExpressionStatement",
                        "src": "513:118:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 779,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "658:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "662:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "658:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 781,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "670:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "674:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "670:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 783,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 739,
                              "src": "682:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 778,
                            "name": "transferFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "645:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "645:39:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 785,
                        "nodeType": "ExpressionStatement",
                        "src": "645:39:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 788,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "733:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 789,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "737:6:4",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "733:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 790,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "745:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 791,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "749:6:4",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "745:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 787,
                                  "name": "allowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 163,
                                  "src": "723:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view returns (uint256)"
                                  }
                                },
                                "id": 792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "723:33:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "760:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "723:38:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6e6f6e2d7a65726f20616c6c6f77616e636520746f20656e64",
                              "id": 795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "779:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ebe3c5f0066575d827f4bba5ac017b4293b0fb5697d82706ad455cd9ddf394d7",
                                "typeString": "literal_string \"non-zero allowance to end\""
                              },
                              "value": "non-zero allowance to end"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ebe3c5f0066575d827f4bba5ac017b4293b0fb5697d82706ad455cd9ddf394d7",
                                "typeString": "literal_string \"non-zero allowance to end\""
                              }
                            ],
                            "id": 786,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "698:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "698:122:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 797,
                        "nodeType": "ExpressionStatement",
                        "src": "698:122:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 742,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 739,
                      "src": "310:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "314:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "310:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 799,
                  "initializationExpression": {
                    "assignments": [
                      739
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 739,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "303:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 799,
                        "src": "295:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 738,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "295:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 741,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "307:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "295:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "320:3:4",
                      "subExpression": {
                        "id": 745,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "320:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 747,
                    "nodeType": "ExpressionStatement",
                    "src": "320:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "290:541:4"
                }
              ]
            },
            "functionSelector": "30627b7c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Benchmark",
            "nameLocation": "203:9:4",
            "parameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "212:2:4"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "224:0:4"
            },
            "scope": 802,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 715,
              "name": "ERC20",
              "nameLocations": [
                "120:5:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 608,
              "src": "120:5:4"
            },
            "id": 716,
            "nodeType": "InheritanceSpecifier",
            "src": "120:5:4"
          }
        ],
        "canonicalName": "ERC20ApprovalTransfer",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          802,
          608,
          711,
          686,
          21
        ],
        "name": "ERC20ApprovalTransfer",
        "nameLocation": "95:21:4",
        "scope": 803,
        "usedErrors": [],
        "usedEvents": [
          620,
          629
        ]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 4
}